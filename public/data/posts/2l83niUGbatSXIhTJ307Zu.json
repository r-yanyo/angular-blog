{
  "id": "2l83niUGbatSXIhTJ307Zu",
  "title": "Next.jsでブログを作った。",
  "date": "2017-11-17",
  "tags": [
    "JavaScript",
    "blog"
  ],
  "content": "<p>Next.js でブログを作りました。</p>\n<p>Next.js とは、Web ページを高速に表示する為に、SPA(シングルページアプリケーション)と SSR(サーバサイドレンダリング)の両方を生かそうというコンセプトで作られたフレームワークらしいです。</p>\n<p>詳しくは</p>\n<ul>\n<li><a href=\"https://zeit.co/blog/next\">https://zeit.co/blog/next</a> か</li>\n<li><a href=\"https://qiita.com/nkzawa/items/1e0e93efd13fb982c8c0\">それの日本語訳</a><br>を見ると良いと思います。</li>\n</ul>\n<p>Next.js は SPA なので、ページを移動してもサーバとの通信が発生しません。よって高速にページ間の移動が出来ます。<br>以下は「Home」ページから「about」ページへ移動する時の通信を chrome の devtools で見た様子です。</p>\n<img src=\"/images/network-log.png\">\n\n<p>１回だけ通信が発生していますが、これはブログ記事をサーバから取ってくる為に私が書いたものなので、それを無くせば Next.js 自体のルーティングでは通信は発生しません。<br>実際このブログでは記事を持ってくるのに 190ms もかかってしまっているので、ページ遷移はあんまり速くないです。</p>\n<p>ブログ記事は markdown で書いています。<br>markdown ファイルを HTML に変換する為に、<a href=\"https://www.npmjs.com/package/markdown-it\">markdown-it</a>を使用しています。markdown-it には拡張用のプラグインがあって、それによってコードハイライトをしています。例えば</p>\n<pre><code class=\"language-js\">function f(arg) {\n  var n = 123 * Number(arg)\n  return function() {\n    console.log(&#39;n is &#39; + n)\n    console.log(&#39;g is called&#39;)\n  }\n}\nconst num = f(5)\nnum()\n</code></pre>\n<p>のような感じ。Tex のプラグインもあるのそれを導入すれば数式も綺麗に表示できるはずです。</p>\n<p>Next.js を使ったブログ作成はこちら <a href=\"https://github.com/ganow/nextjs-blog-sample\">https://github.com/ganow/nextjs-blog-sample</a> を参考にさせて頂きました。</p>\n"
}